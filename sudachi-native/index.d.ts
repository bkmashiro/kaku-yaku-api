/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export const enum SudachiMode {
  A = 0,
  B = 1,
  C = 2
}
export const enum SentenceSplitMode {
  Default = 0,
  Only = 1,
  None = 2
}
export declare class MorphemeObject {
  surface: string
  dictionaryForm: string
  readingForm: string
  partOfSpeech: Array<string>
  normalizedForm: string
  dictionaryId: number
  synonymGroupIds: Array<number>
  isOov: boolean
}
export declare class SudachiTokenizer {
  constructor(configPath?: string | undefined, resourceDir?: string | undefined, dictionaryPath?: string | undefined)
  tokenize(text: string, mode: SudachiMode, printAll: boolean): Array<MorphemeObject>
  tokenizeToString(text: string, mode: SudachiMode, wakati: boolean, printAll: boolean): string
  splitSentences(text: string): Array<string>
}
export declare class DictionaryBuilder {
  constructor()
  setConfigPath(path: string): void
  setResourceDir(path: string): void
  setMatrixFile(path: string): void
  setSystemDictPath(path: string): void
  setDescription(description: string): void
  addLexiconFile(path: string): void
  buildSystemDictionary(outputPath: string): string
  buildUserDictionary(outputPath: string): string
}
